ext {
    rustore_core_version = '1.0.0'
    rustore_billingclient_version = '3.2.0'
    rustore_sdk_type = ''
    sdk_version_code = 1
    rustore_qa_dir = "${rootProject.projectDir}/../QA"
}
buildscript {
    ext.kotlin_version = "1.7.10"
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://artifactory-external.vkpartner.ru/artifactory/maven")
        }
        maven {
            url uri("$rustore_qa_dir/repo")
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def androidDir = [rootDir.absolutePath, '..', 'godot_example', 'android'].join(File.separator)

task copyAndroidManifest(type: Copy) {
    from    ( [androidDir, 'build'].join(File.separator) )
    include ( "AndroidManifest.xml" )
    into    ( [androidDir, 'build_example'].join(File.separator) )
}

task copyBuildFiles {
    copyAndroidManifest.copy()
}

afterEvaluate {
    def folder = file(rustore_qa_dir)
    if (!folder.exists())
        rustore_sdk_type = ''
    else
        copyBuildFiles
}
